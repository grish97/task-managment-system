{
  "extends": [
    "react-app",
    "plugin:@typescript-eslint/recommended",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "rules": {
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "react/no-direct-mutation-state": "off",
    "prettier/prettier": "warn",
    "react-hooks/rules-of-hooks": "warn",
    "default-case": "off",
    "no-loop-func": "off",
    "no-extra-boolean-cast": "off",
    "no-console": "off",
    "no-useless-escape": "off",
    "no-unused-vars": "off",
    "eqeqeq": "off",
    "interface-name": "off",
    "no-fallthrough": "off",
    "array-callback-return": "off",
    "semi": "error",
    "curly": "error",
    "no-eval": "off",
    "no-self-assign": "error",
    "no-self-compare": "error"
  },
  "overrides": [
    {
      "files": ["**/*.ts?(x)", "**/*.ts", "**/*.tsx"],
      "rules": {
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/ban-types": "warn",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "ignoredMethodNames": [
              "constructor",
              "componentDidMount",
              "componentWillUnmount",
              "getDerivedStateFromProps",
              "shouldComponentUpdate",
              "getSnapshotBeforeUpdate",
              "componentDidUpdate",
              "render"
            ]
          }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": true
            }
          }
        ]
      }
    }
  ]
}